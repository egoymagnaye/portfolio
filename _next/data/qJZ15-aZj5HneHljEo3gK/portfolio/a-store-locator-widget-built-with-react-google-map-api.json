{"pageProps":{"portfolio":{"id":92,"date":"2021-04-20T19:49:08","slug":"a-store-locator-widget-built-with-react-google-map-api","title":"A Store Locator Widget Built With React & Google Map API","description":"<h3><span data-preserver-spaces=\"true\">What is the main problem?</span></h3>\n<p><span data-preserver-spaces=\"true\">The client requires me to build a functionality that enables their customers to find affiliate retailers in Australia. The retailer locator must have some sort of filter functionalities that will help the customers to find the nearest retailers to a given area and limits the search result with the business type category. The search results must display on a Google Map.</span></p>\n<h3><span data-preserver-spaces=\"true\">Feature overview:</span></h3>\n<ul>\n<li><span data-preserver-spaces=\"true\">Integration with Google Maps</span></li>\n<li><span data-preserver-spaces=\"true\">Find the nearest retailers in a given area.</span></li>\n<li><span data-preserver-spaces=\"true\">Limit the results with the retailer&#8217;s business type.</span></li>\n<li><span data-preserver-spaces=\"true\">Find specific retailers in a given area.</span></li>\n</ul>\n<h3><span data-preserver-spaces=\"true\">How I built the application?</span></h3>\n<p><span data-preserver-spaces=\"true\">This store locator was built using the React.js library. I know this type of functionality can be done also in a vanilla javascript development approach but I want to use the flexibility of React in building widgets and apps. Another reason is it&#8217;s so easy to manage the application&#8217;s state in React. </span></p>\n<p><span data-preserver-spaces=\"true\">I used the React Context and useReducer to managed the functionality state and not Redux. I think using Redux is quite overkill for this specific widget&#8217;s functionality.</span></p>\n<p><span data-preserver-spaces=\"true\">I used the Formik package for rendering form components. I find it easy to control or manage the input fields, errors, validations, events, and form&#8217;s state when I&#8217;m using Formik.</span></p>\n<p><span data-preserver-spaces=\"true\">In terms of styling the widget, I used the Tailwind CSS to add the styles.</span></p>\n<p><span data-preserver-spaces=\"true\">I think the most complicated part of this widget was the integration of the Google Map APIs. It&#8217;s easy to show the map in the widget, the difficult part is how to show the retailer&#8217;s map pin conditionally. I need to show the retailer&#8217;s map pin that is only located in a given radius or area. </span></p>\n<p><span data-preserver-spaces=\"true\">For example, a user wants to find all the retailers within a 10 km radius. All the retailer&#8217;s map pins within this area will be visible on the map. </span></p>\n<p><span data-preserver-spaces=\"true\">To be honest, I&#8217;m not that good when it comes to Google Maps API because most of the time I&#8217;m just embedding maps to my client&#8217;s website and there is no complex customization like this one. </span></p>\n<p><span data-preserver-spaces=\"true\">I read some of the Google Maps API documentation, I tried to look for related issues that might help as well. After several searching, I came up with a helper method that I can use. Based on Google Map docs, there&#8217;s a method called &#8220;computeDistanceBetween&#8221;. Basically, this method needs the retailer&#8217;s position (latitude &amp; longitude), and also the center position of the given area. This method will return a distance value that I can use to compare with the user&#8217;s provided radius. If the value (distance) is less than or equal to the user&#8217;s provided radius, it means that the current retailer is within the given area.</span></p>\n<h3><span data-preserver-spaces=\"true\">How does the application work?</span></h3>\n<p><span data-preserver-spaces=\"true\">It&#8217;s easy to use this widget. The user can choose between searching for the nearest retailers and searching for specific retailers. They can easily switch between different forms.</span></p>\n<p><img src=\"https://cms.egoymagnaye.com/wp-content/uploads/2021/04/store-locator-tab.jpg\" alt=\"\" /></p>\n<p><span data-preserver-spaces=\"true\">The Address input field is connected to the Places Library of Google Map API. This gives an auto-complete feature so whenever a user searches, a handy suggestion dropdown will show.</span></p>\n<p><img src=\"https://cms.egoymagnaye.com/wp-content/uploads/2021/04/places-ac.png\" alt=\"\" /></p>\n<h5>The Form for Searching Multiple Retailers:</h5>\n<p><span data-preserver-spaces=\"true\">The default form contains input fields for the Address, Business Unit, and the Radius. </span></p>\n<p><img src=\"https://cms.egoymagnaye.com/wp-content/uploads/2021/04/tab-1.jpg\" alt=\"\" /></p>\n<p><strong><span data-preserver-spaces=\"true\">Address</span></strong><span data-preserver-spaces=\"true\"> &#8211; Input for getting the address of the user. Behind the scene, this will get the latitude and longitude of that current address that will be processed to get the retailers.</span></p>\n<p><strong><span data-preserver-spaces=\"true\">Business Unit</span></strong><span data-preserver-spaces=\"true\"> &#8211; This is the retailer&#8217;s category. The users can choose between these categories to filter out the retailers that they are looking for. This is not required data, if the user didn&#8217;t choose any business unit, all retailers in that area will show.</span></p>\n<p><strong><span data-preserver-spaces=\"true\">Radius</span></strong><span data-preserver-spaces=\"true\"> &#8211; This is responsible for getting the area in the map that the user wants to search for. For example, the user wants to search for retailers within 25 km using the given address as the center position.</span></p>\n<p><span data-preserver-spaces=\"true\">If they are done completing the form, they can click the Search Retailers button. The map will show all the retailer&#8217;s map pins that are located in that area.</span></p>\n<p><img src=\"https://cms.egoymagnaye.com/wp-content/uploads/2021/04/full-store-locator.jpg\" alt=\"\" /></p>\n<h5>The Form for Searching Specific Retailers:</h5>\n<p><span data-preserver-spaces=\"true\">This form works like the default form but instead of showing all retailers in that area based on the business unit category, it will show specific retailers only. Useful for searching retailers directly. </span></p>\n<p><span data-preserver-spaces=\"true\">This form contains the same input fields except for the Business Unit field, it was replaced with the Branch Name field.</span></p>\n<p><img src=\"https://cms.egoymagnaye.com/wp-content/uploads/2021/04/tab-2.jpg\" alt=\"\" /></p>\n<p><strong><span data-preserver-spaces=\"true\">Branch Name</span></strong><span data-preserver-spaces=\"true\"> &#8211; This field is responsible for getting the retailer&#8217;s branch name. The keyword doesn&#8217;t need to match with the branch name exactly. If the current search matches multiple retailers, the retailer&#8217;s map pins will show on the map.</span></p>\n<h5>The Map:</h5>\n<p><span data-preserver-spaces=\"true\">Whenever a user searches for retailers, all the map pins in a given area will show on the map. If a user clicks a pin, a custom info window will show at the bottom left corner of the map. This info window will show the details about the currently selected map pin.</span></p>\n<p><img src=\"https://cms.egoymagnaye.com/wp-content/uploads/2021/04/sample-search-result.jpg\" alt=\"\" /></p>\n<h5>The Reset Button:</h5>\n<p><span data-preserver-spaces=\"true\">If the user wants to do a new search, they can just click the Reset button to restore the widget to its default state.</span></p>\n<h3>Limitations:</h3>\n<ul>\n<li><span data-preserver-spaces=\"true\">The widget doesn&#8217;t integrate with Geolocation API. The Geolocation API can help the user to get their location automatically.</span></li>\n</ul>\n","techStacks":"React JS, React Context, React Hooks, Formik, Google Map API, Tailwind CSS","excerpt":"A custom widget developed for a home remodeling company in Australia. Helps to add a store locator to the client's website. This widget enables the customer to find the nearest retailers in a given area.","featuredImg":"https://cms.egoymagnaye.com/wp-content/uploads/2021/04/store-locator-featured-image.jpg","previewImg":"https://cms.egoymagnaye.com/wp-content/uploads/2021/04/store-locator-preview-image.jpg"}},"__N_SSG":true}